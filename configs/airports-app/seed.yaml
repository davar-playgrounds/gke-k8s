apiVersion: v1
kind: Pod
metadata:
  name: ${SERVICE_NAME}-seed
  namespace: ${NAMESPACE}
  labels:
    component: ${SERVICE_NAME}-seed
    access-${SERVICE_NAME}-db: "1"
spec:
  restartPolicy: Never
  volumes:
    - name: shared-data
      emptyDir: {}
    - name: config-volume
      configMap:
        name: seed-config
  initContainers:
    - name: waiting-for-db
      image: mongo:${SERVICE_MONGO_VER}
      command: ["/bin/sh"]
      args: ['/app/scripts/wait-for-db.sh']
      resources:
        limits:
          cpu: "50m"
          memory: 64Mi
        requests:
          cpu: "20m"
          memory: 32Mi
      volumeMounts:
        - name: config-volume
          mountPath: /app/scripts/wait-for-db.sh
          subPath: wait-for-db.sh
          readOnly: true
      env:
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: ${SERVICE_NAME}-db-credentials
              key: username
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${SERVICE_NAME}-db-credentials
              key: password
        - name: MONGO_DB
          valueFrom:
            secretKeyRef:
              name: ${SERVICE_NAME}-db-credentials
              key: database
        - name: MONGO_DOMAIN
          value: '${SERVICE_NAME}-db.${NAMESPACE}.svc.cluster.local'
        - name: MONGO_PORT
          value: '27017'
    - name: waiting-for-data
      image: busybox:${SERVICE_BUSYBOX_VER}
      command: ["/bin/sh"]
      args: ['/app/scripts/wait-for-file.sh']
      resources:
        limits:
          cpu: "50m"
          memory: 384Mi
        requests:
          cpu: "20m"
          memory: 128Mi
      volumeMounts:
        - name: shared-data
          mountPath: /app/data
        - name: config-volume
          mountPath: /app/scripts/wait-for-file.sh
          subPath: wait-for-file.sh
          readOnly: true
  containers:
    - name: seed
      image: mongo:${SERVICE_MONGO_VER}
      command: ["/bin/sh"]
      args: ['/app/scripts/import-db.sh']
      imagePullPolicy: Always
      volumeMounts:
        - name: shared-data
          mountPath: /app/data
          readOnly: true
        - name: config-volume
          mountPath: /app/scripts/import-db.sh
          subPath: import-db.sh
          readOnly: true
      resources:
        limits:
          cpu: "100m"
          memory: 384Mi
        requests:
          cpu: "50m"
          memory: 128Mi
      env:
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: ${SERVICE_NAME}-db-credentials
              key: username
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ${SERVICE_NAME}-db-credentials
              key: password
        - name: MONGO_COLLECTION
          valueFrom:
            secretKeyRef:
              name: ${SERVICE_NAME}-db-credentials
              key: collection
        - name: MONGO_DB
          valueFrom:
            secretKeyRef:
              name: ${SERVICE_NAME}-db-credentials
              key: database
        - name: MONGO_DOMAIN
          value: '${SERVICE_NAME}-db.${NAMESPACE}.svc.cluster.local'
        - name: MONGO_PORT
          value: '27017'
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: deny-all-access-${SERVICE_NAME}-seed
  namespace: ${NAMESPACE}
spec:
  podSelector:
    matchLabels:
      component: ${SERVICE_NAME}-seed
  policyTypes:
    - Ingress
